% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim-functions.R
\name{add_layer}
\alias{add_layer}
\title{Builds the next generation of nodes in a tree}
\usage{
add_layer(parent_layer, tmax, tbar, p, lambda, kappa, q, mbar, kappaq)
}
\arguments{
\item{parent_layer}{A \code{data.frame}. Contains the properties of
each parent node. The columns are \code{id_parent} (the index
of the parent's parent node), \code{t_infect} (the clock time
at which that parent was infected), \code{t_comm} (the duration
of the parent's communicable period).}

\item{tmax}{A non-negative scalar. Cutoff time for the simulated
branches.}

\item{tbar}{A non-negative scalar. Average duration of the
communicable windows of the new nodes. Together with
\code{kappa}, it determines a shape parameter \code{tbar *
    kappa} for the the Gamma distribution from which we draw a
communicable period for each new node.}

\item{p}{A scalar between 0 and 1. Parameter for a logarithmic
distribution, giving the expected number of new infections per
infection event.}

\item{lambda}{A non-negative scalar. Parameter for a Poisson
distribution, giving the expected number of infection events
per parent node.}

\item{kappa}{A non-negative scalar (including \code{Inf}). Rate
parameter for the Gamma distribution from which we draw a
communicable period duration for each new node. If \code{kappa
    = Inf}, then the draw is deterministic, and all communicable
periods are exactly equal to \code{tbar}.}

\item{q}{A scalar between 0 and 1. The probability that a parent
node is intercepted (e.g. through contact tracing).}

\item{mbar}{A non-negative scalar. The value replacing \code{tbar}
for intercepted parent nodes. This parameter has no role if
\code{q = 0}.}

\item{kappaq}{A non-negative scalar. The value replacing
\code{kappa} for intercepted parent nodes. This parameter has
no role if \code{q = 0}.}
}
\value{
A \code{tibble} with one row for each new node, and three
columns: \code{id_parent}, \code{t_infect}, and \code{t_comm}.
}
\description{
Given a set of parent nodes and their properties, this function
simulates the next generation of infected nodes.
}
